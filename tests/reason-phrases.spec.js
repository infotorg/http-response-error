import reasonPhrases from '../src/reason-phrases.js';

describe('Tests Reason Phrases', () => {
  test('it should contain all reason phrases', () => {
    expect(Object.keys(reasonPhrases).length).toBe(57);
  });

  test.each([
    // Key, value
    ['ACCEPTED', 'Accepted'],
    ['BAD_GATEWAY', 'Bad Gateway'],
    ['BAD_REQUEST', 'Bad Request'],
    ['CONFLICT', 'Conflict'],
    ['CONTINUE', 'Continue'],
    ['CREATED', 'Created'],
    ['EXPECTATION_FAILED', 'Expectation Failed'],
    ['FAILED_DEPENDENCY', 'Failed Dependency'],
    ['FORBIDDEN', 'Forbidden'],
    ['GATEWAY_TIMEOUT', 'Gateway Timeout'],
    ['GONE', 'Gone'],
    ['HTTP_VERSION_NOT_SUPPORTED', 'HTTP Version Not Supported'],
    ['IM_A_TEAPOT', "I'm a teapot"],
    ['INSUFFICIENT_STORAGE', 'Insufficient Storage'],
    ['INTERNAL_SERVER_ERROR', 'Internal Server Error'],
    ['LENGTH_REQUIRED', 'Length Required'],
    ['LOCKED', 'Locked'],
    ['METHOD_FAILURE', 'Method Failure'],
    ['METHOD_NOT_ALLOWED', 'Method Not Allowed'],
    ['MOVED_PERMANENTLY', 'Moved Permanently'],
    ['MOVED_TEMPORARILY', 'Moved Temporarily'],
    ['MULTI_STATUS', 'Multi-Status'],
    ['MULTIPLE_CHOICES', 'Multiple Choices'],
    ['NETWORK_AUTHENTICATION_REQUIRED', 'Network Authentication Required'],
    ['NO_CONTENT', 'No Content'],
    ['NON_AUTHORITATIVE_INFORMATION', 'Non Authoritative Information'],
    ['NOT_ACCEPTABLE', 'Not Acceptable'],
    ['NOT_FOUND', 'Not Found'],
    ['NOT_IMPLEMENTED', 'Not Implemented'],
    ['NOT_MODIFIED', 'Not Modified'],
    ['OK', 'OK'],
    ['PARTIAL_CONTENT', 'Partial Content'],
    ['PAYMENT_REQUIRED', 'Payment Required'],
    ['PERMANENT_REDIRECT', 'Permanent Redirect'],
    ['PRECONDITION_FAILED', 'Precondition Failed'],
    ['PRECONDITION_REQUIRED', 'Precondition Required'],
    ['PROCESSING', 'Processing'],
    ['EARLY_HINTS', 'Early Hints'],
    ['UPGRADE_REQUIRED', 'Upgrade Required'],
    ['PROXY_AUTHENTICATION_REQUIRED', 'Proxy Authentication Required'],
    ['REQUEST_HEADER_FIELDS_TOO_LARGE', 'Request Header Fields Too Large'],
    ['REQUEST_TIMEOUT', 'Request Timeout'],
    ['CONTENT_TOO_LARGE', 'Content Too Large'],
    ['URI_TOO_LONG', 'URI Too Long'],
    ['RANGE_NOT_SATISFIABLE', 'Range Not Satisfiable'],
    ['RESET_CONTENT', 'Reset Content'],
    ['SEE_OTHER', 'See Other'],
    ['SERVICE_UNAVAILABLE', 'Service Unavailable'],
    ['SWITCHING_PROTOCOLS', 'Switching Protocols'],
    ['TEMPORARY_REDIRECT', 'Temporary Redirect'],
    ['TOO_MANY_REQUESTS', 'Too Many Requests'],
    ['UNAUTHORIZED', 'Unauthorized'],
    ['UNAVAILABLE_FOR_LEGAL_REASONS', 'Unavailable For Legal Reasons'],
    ['UNPROCESSABLE_ENTITY', 'Unprocessable Entity'],
    ['UNSUPPORTED_MEDIA_TYPE', 'Unsupported Media Type'],
    ['USE_PROXY', 'Use Proxy'],
    ['MISDIRECTED_REQUEST', 'Misdirected Request'],
  ])('it should contain key with a proper phrase: %p', (constantName, code) => {
    expect(reasonPhrases[constantName]).toBe(code);
  });
});
